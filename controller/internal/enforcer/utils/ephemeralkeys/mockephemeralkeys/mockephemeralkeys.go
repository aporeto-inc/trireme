// Code generated by MockGen. DO NOT EDIT.
// Source: controller/internal/enforcer/utils/ephemeralkeys/interfaces.go

// Package mockephemeralkeys is a generated GoMock package.
package mockephemeralkeys

import (
	ecdsa "crypto/ecdsa"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeyAccessor is a mock of KeyAccessor interface
// nolint
type MockKeyAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockKeyAccessorMockRecorder
}

// MockKeyAccessorMockRecorder is the mock recorder for MockKeyAccessor
// nolint
type MockKeyAccessorMockRecorder struct {
	mock *MockKeyAccessor
}

// NewMockKeyAccessor creates a new mock instance
// nolint
func NewMockKeyAccessor(ctrl *gomock.Controller) *MockKeyAccessor {
	mock := &MockKeyAccessor{ctrl: ctrl}
	mock.recorder = &MockKeyAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
// nolint
func (m *MockKeyAccessor) EXPECT() *MockKeyAccessorMockRecorder {
	return m.recorder
}

// PrivateKey mocks base method
// nolint
func (m *MockKeyAccessor) PrivateKey() *ecdsa.PrivateKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateKey")
	ret0, _ := ret[0].(*ecdsa.PrivateKey)
	return ret0
}

// PrivateKey indicates an expected call of PrivateKey
// nolint
func (mr *MockKeyAccessorMockRecorder) PrivateKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateKey", reflect.TypeOf((*MockKeyAccessor)(nil).PrivateKey))
}

// DecodingKey mocks base method
// nolint
func (m *MockKeyAccessor) DecodingKey() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodingKey")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// DecodingKey indicates an expected call of DecodingKey
// nolint
func (mr *MockKeyAccessorMockRecorder) DecodingKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodingKey", reflect.TypeOf((*MockKeyAccessor)(nil).DecodingKey))
}
