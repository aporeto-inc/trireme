// Code generated by MockGen. DO NOT EDIT.
// Source: monitor/remoteapi/client/interfaces.go

// Package mockclient is a generated GoMock package.
package mockclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "go.aporeto.io/enforcerd/trireme-lib/common"
)

// MockAPIClient is a mock of APIClient interface
// nolint
type MockAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockAPIClientMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient
// nolint
type MockAPIClientMockRecorder struct {
	mock *MockAPIClient
}

// NewMockAPIClient creates a new mock instance
// nolint
func NewMockAPIClient(ctrl *gomock.Controller) *MockAPIClient {
	mock := &MockAPIClient{ctrl: ctrl}
	mock.recorder = &MockAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
// nolint
func (m *MockAPIClient) EXPECT() *MockAPIClientMockRecorder {
	return m.recorder
}

// SendRequest mocks base method
// nolint
func (m *MockAPIClient) SendRequest(event *common.EventInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendRequest", event)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendRequest indicates an expected call of SendRequest
// nolint
func (mr *MockAPIClientMockRecorder) SendRequest(event interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendRequest", reflect.TypeOf((*MockAPIClient)(nil).SendRequest), event)
}
