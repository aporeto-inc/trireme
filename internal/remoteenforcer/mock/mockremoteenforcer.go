// Automatically generated by MockGen. DO NOT EDIT!
// Source: internal/remoteenforcer/interfaces.go

package mockremoteenforcer

import (
	gomock "github.com/aporeto-inc/mock/gomock"
	rpcwrapper "github.com/aporeto-inc/trireme-lib/enforcer/utils/rpcwrapper"
)

// Mock of RemoteIntf interface
// nolint
type MockRemoteIntf struct {
	ctrl     *gomock.Controller
	recorder *_MockRemoteIntfRecorder
}

// Recorder for MockRemoteIntf (not exported)
// nolint
type _MockRemoteIntfRecorder struct {
	mock *MockRemoteIntf
}

// nolint
func NewMockRemoteIntf(ctrl *gomock.Controller) *MockRemoteIntf {
	mock := &MockRemoteIntf{ctrl: ctrl}
	mock.recorder = &_MockRemoteIntfRecorder{mock}
	return mock
}

// nolint
func (_m *MockRemoteIntf) EXPECT() *_MockRemoteIntfRecorder {
	return _m.recorder
}

// nolint
func (_m *MockRemoteIntf) InitEnforcer(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "InitEnforcer", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) InitEnforcer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InitEnforcer", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) InitSupervisor(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "InitSupervisor", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) InitSupervisor(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InitSupervisor", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) Supervise(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "Supervise", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) Supervise(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Supervise", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) Unenforce(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "Unenforce", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) Unenforce(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unenforce", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) Unsupervise(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "Unsupervise", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) Unsupervise(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unsupervise", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) Enforce(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "Enforce", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) Enforce(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Enforce", arg0, arg1)
}

// nolint
func (_m *MockRemoteIntf) EnforcerExit(req rpcwrapper.Request, resp *rpcwrapper.Response) error {
	ret := _m.ctrl.Call(_m, "EnforcerExit", req, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// nolint
func (_mr *_MockRemoteIntfRecorder) EnforcerExit(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnforcerExit", arg0, arg1)
}
