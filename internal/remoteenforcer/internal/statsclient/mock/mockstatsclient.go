// Code generated by MockGen. DO NOT EDIT.
// Source: internal/remoteenforcer/internal/statsclient/interfaces.go

// Package mockstatsclient is a generated GoMock package.
package mockstatsclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatsClient is a mock of StatsClient interface
type MockStatsClient struct {
	ctrl     *gomock.Controller
	recorder *MockStatsClientMockRecorder
}

// MockStatsClientMockRecorder is the mock recorder for MockStatsClient
type MockStatsClientMockRecorder struct {
	mock *MockStatsClient
}

// NewMockStatsClient creates a new mock instance
func NewMockStatsClient(ctrl *gomock.Controller) *MockStatsClient {
	mock := &MockStatsClient{ctrl: ctrl}
	mock.recorder = &MockStatsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStatsClient) EXPECT() *MockStatsClientMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockStatsClient) Start() error {
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockStatsClientMockRecorder) Start() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockStatsClient)(nil).Start))
}

// Stop mocks base method
func (m *MockStatsClient) Stop() {
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop
func (mr *MockStatsClientMockRecorder) Stop() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockStatsClient)(nil).Stop))
}
